namespace: jenkins

server:
  defines: runnable

  metadata:
    website: https://www.jenkins.io/
    name: Jenkins
    icon: https://www.jenkins.io/images/logos/jenkins/Jenkins.svg
    publisher: monk.io
    description: |
      Jenkins is an open-source automation server that helps to automate various parts of the software development process, including building, testing, and deploying applications. It is a powerful continuous integration (CI) and continuous delivery (CD) tool that allows developers to automate repetitive tasks and improve the efficiency of their workflows. With Jenkins, developers can create pipelines that automate the entire software delivery process, from code commit to production deployment.

      Jenkins supports a wide range of programming languages and provides integration with various tools and platforms, making it an extremely versatile and customizable automation server. It also provides a vast collection of plugins that can be used to extend its functionality and integrate with other tools in the software development pipeline. Additionally, Jenkins is easy to set up and configure, with a user-friendly interface that makes it accessible to developers of all skill levels.
      ---

      Notes:

      This template has available Jenkins action:
      getAdminCredentials - Will display your default Jenkins credentials
    source: https://github.com/jenkinsci/jenkins
    tags: infrastructure as code, release management, jenkins plugins, monitoring, test automation, continuous deployment, jenkinsfile, docker, continuous integration, kubernetes, configuration management, collaboration, build automation, devops, jenkins pipeline, version control, deployment automation, artifact management
  containers:
    jenkins:
      paths:
        - <- `${monk-volume-path}/jenkins:/var/jenkins_home`
      image: jenkins/jenkins
      image-tag: lts
      user: jenkins
      environment:
        - JAVA_OPTS=-Djava.awt.headless=true
  services:
    http:
      container: jenkins
      protocol: tcp
      port: 8080
      host-port: 8080
    tcp-agent:
      container: jenkins
      protocol: tcp
      port: 50000
      host-port: 50000

  actions:
    getAdminCredentials:
      code: exec("jenkins", "/bin/bash", "-c", `cat /var/jenkins_home/secrets/initialAdminPassword`)
      description: Get Jenkins admin credentials
